import app.weather.buildsrc.Libs;

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.android.xu.weather"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.android.app.weather.WeatherAppTestRunner"

        buildConfigField "String", "XU_API_KEY", "\"" + propOrDef("API_XU_KEY", "") + "\""

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    packagingOptions {
        pickFirst 'mockito-extensions/org.mockito.plugins.MockMaker'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}




dependencies {

    implementation Libs.Kotlin.stdlib
    implementation Libs.Kotlin.reflect


    implementation project(":xuapi")
    implementation project(":core")
    implementation project(":data")
    implementation project(":interactors")

    implementation Libs.AndroidX.coreKtx
    implementation Libs.AndroidX.constraintlayout
    implementation Libs.AndroidX.recyclerview
    implementation Libs.AndroidX.appcompat



    implementation Libs.RxJava.rxJava
    implementation Libs.RxJava.rxKotlin
    implementation Libs.RxJava.rxAndroid


    implementation Libs.AndroidX.Lifecycle.viewmodel
    implementation Libs.AndroidX.Lifecycle.extensions
    implementation Libs.AndroidX.multidex



    implementation Libs.Coroutines.core
    implementation Libs.Coroutines.rx2
    implementation Libs.Coroutines.android

    implementation Libs.Dagger.androidSupport
    kapt Libs.Dagger.compiler
    kapt Libs.Dagger.androidProcessor

    kaptAndroidTest Libs.Dagger.androidProcessor


    implementation Libs.OkHttp.loggingInterceptor
    implementation Libs.OkHttp.okhttp

    implementation Libs.PlayServices.location

    implementation Libs.Retrofit.gsonConverter

    // Test dependencies

    androidTestImplementation('com.jakewharton.espresso:okhttp3-idling-resource:1.0.0') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }



    //mockito
    androidTestImplementation 'org.mockito:mockito-android:2.27.0'
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"


    testImplementation "androidx.arch.core:core-testing:2.0.0-rc01"

    //mockwebserver
    androidTestImplementation('com.squareup.okhttp3:mockwebserver:4.0.0') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }



    testImplementation 'junit:junit:4.12'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.0')
    androidTestImplementation 'androidx.test:core:1.0.0'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1'



}
